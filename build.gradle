plugins {
  id 'application'
  id 'jacoco'
  id 'checkstyle'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.springframework.boot' version '3.2.0'
  id 'org.owasp.dependencycheck' version '9.0.3'
  id 'com.github.ben-manes.versions' version '0.50.0'
  id 'org.sonarqube' version '4.4.1.3373'
}

group = 'uk.gov.hmcts.ethos.ecm'
version = '0.0.1'

checkstyle {
  maxWarnings = 0
  toolVersion = '10.12.6'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

def sonarExclusions = ['**/uk/gov/hmcts/reform/ethos/ecm/consumer/config/**',
                       '**/uk/gov/hmcts/reform/ethos/ecm/consumer/model/**',
                       '**/uk/gov/hmcts/reform/ethos/ecm/consumer/domain/**',
                       '**/uk/gov/hmcts/reform/ethos/ecm/consumer/tasks/**',
                       '**/uk/gov/hmcts/reform/ethos/ecm/consumer/Application'
]

sonarqube {
  properties {
    property "sonar.exclusions", sonarExclusions.join(', ')
    property "sonar.projectKey", "ecm-consumer"
    property "sonar.dynamicAnalysis", "reuseReports"
    property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sourceSets {
  test {
    java.srcDir 'src/test/java'
  }

  functional {
    java.srcDir 'src/test/functional/java'
    resources.srcDir 'src/test/functional/resources'
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

configurations {
  functionalImplementation.extendsFrom testImplementation
  functionalRuntimeOnly.extendsFrom testRuntimeOnly
}

test {
  exclude '**/*ComponentTest*'
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functional.output.classesDirs
  classpath = sourceSets.functional.runtimeClasspath

  useJUnit {
    includeCategories 'uk.gov.hmcts.reform.ethos.ecm.consumer.functional.SmokeTest'
  }
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
  testClassesDirs = sourceSets.functional.output.classesDirs
  classpath = sourceSets.functional.runtimeClasspath

  useJUnit {
    includeCategories 'uk.gov.hmcts.reform.ethos.ecm.consumer.functional.SmokeTest'
    includeCategories 'uk.gov.hmcts.reform.ethos.ecm.consumer.functional.HealthCheckTest'
  }
  maxHeapSize = '1G'
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

dependencyManagement {
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '32.1.3-jre') {
      entry 'guava'
    }
    dependencySet(group: 'io.netty', version: '4.1.101.Final') {
      entry 'netty-buffer'
      entry 'netty-codec'
      entry 'netty-codec-http'
      entry 'netty-codec-socks'
      entry 'netty-common'
      entry 'netty-handler'
      entry 'netty-handler-proxy'
      entry 'netty-resolver'
      entry 'netty-transport'
      entry 'netty-transport-native-epoll'
      entry 'netty-transport-native-kqueue'
      entry 'netty-transport-native-unix-common'
      entry 'netty-transport-classes-epoll'
      entry 'netty-transport-classes-kqueue'
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://jitpack.io" }
}

ext {
  junitPlatform = '1.6.2'
  log4JVersion = '2.22.0'
  serenity = '4.0.28'
  springBoot = springBoot.class.package.implementationVersion
  tomcatEmbedVersion = '10.1.16'
}

ext["rest-assured.version"] = '5.1.0'

dependencies {

  implementation group: 'com.github.hmcts', name: 'ecm-common', version: '2.0.5'
  implementation group: 'com.github.hmcts', name: 'ecm-data-model', version: '1.1.7'
  implementation group: 'com.github.hmcts', name: 'et-data-model', version: '4.0.0'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: '6.0.1'
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.0'
  implementation group: 'net.minidev', name: 'accessors-smart', version: '2.5.0'
  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.37.2'
  implementation group: 'junit', name: 'junit', version: '4.13.2'
  implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '5.10.1'
  implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.25.0'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
  implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
  implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.30'
  implementation group: 'org.apache.santuario', name: 'xmlsec', version: '4.0.1'
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: tomcatEmbedVersion
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: tomcatEmbedVersion
  implementation group: 'org.apache.xmlgraphics', name: 'batik-all', version: '1.17', ext: 'pom'
  implementation('org.elasticsearch:elasticsearch') {
    version {
      strictly '7.17.3'
    }
  }
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.0'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-configuration-processor'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.0.4'
  implementation 'org.springframework.retry:spring-retry'
  implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.0'
  implementation group: 'com.squareup.okio', name: 'okio', version: '3.6.0'

  implementation group: 'org.testng', name: 'testng', version: '7.8.0'
  implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'

  implementation 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  testImplementation group: 'com.auth0', name: 'java-jwt', version: '4.4.0'
  testImplementation 'com.github.hmcts:fortify-client:1.3.0:all'
  testImplementation group: 'com.warrenstrange', name: 'googleauth', version: '1.5.0'
  testImplementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.1'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: serenity, {
    exclude module: 'jaxb-osgi'
  }
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: serenity
  testImplementation group: 'org.docx4j', name: 'docx4j-JAXB-ReferenceImpl', version: '11.4.9'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

mainClassName = 'uk.gov.hmcts.reform.ethos.ecm.consumer.Application'

bootJar {
  getArchiveFileName().set(provider {
    'ecm-consumer.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
